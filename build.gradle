plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.sudarshan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")
	set('testcontainersVersion', "1.17.3") 
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive' 
	implementation 'org.springframework.session:spring-session-data-redis' 
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-security' 
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' 
  	testImplementation 'org.springframework.security:spring-security-test' 
  	testImplementation 'org.testcontainers:junit-jupiter' 
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}" 
	}
}

bootBuildImage {
  imageName = "${project.name}"
  environment = ["BP_JVM_VERSION" : "17.*"]
  docker {
		host = "tcp://192.168.0.9:2375"
		publishRegistry {
     		username = project.findProperty("registryUsername") 
     		password = project.findProperty("registryToken") 
     		url = project.findProperty("registryUrl") 
  		}
  }
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
  environment "CATALOG_SERVICE_URL", "http://192.168.0.9:9001"
  environment "ORDER_SERVICE_URL", "http://192.168.0.9:9002"
  environment "SPA_URL", "http://192.168.0.9:9004"	
}
